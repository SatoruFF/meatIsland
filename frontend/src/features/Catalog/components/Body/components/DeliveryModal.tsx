import _ from "lodash";
import { Modal, Form, Input, Radio, Button, message } from "antd";
import { useEffect, useState } from "react";

import styles from "../stylesBody.module.less";
import { ISaleAttrs } from "../../../../../Types/Sale";
import { createSail } from "../../../../../services/saleService";
import basketStore from "../../../../../store/storeBasket";

const { TextArea } = Input;

const DeliveryModal = ({ items, isOpen, onClose, countProduct, sumPrice }) => {
  const [modalWidth, setModalWidth] = useState("50%");
  const [successfulOrder, setSuccessfulOrder] = useState(false);

  const [form] = Form.useForm();
  const { basket } = basketStore();

  const onCloseModal = () => {
    setSuccessfulOrder(false);
    onClose();
  };

  const handleSubmit = async (values: ISaleAttrs) => {
    try {
      await createSail({
        data: _.assign(values, {
          products: Array.isArray(basket)
            ? basket.map((i) => {
                return { product: i.id, quantity: i.quantity };
              })
            : _.map(basket, (item, id) => {
                return { product: id, quantity: item.quantity };
              }),
        }),
      }); // TODO: —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ —Å—Ç—Ä–µ–º–Ω—ã–π –∫–æ—Å—Ç—ã–ª—å
      setSuccessfulOrder(true);
    } catch (error) {
      message.error(
        `–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞, —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: ${error.message}}`
      );
    }
  };

  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth <= 950) {
        setModalWidth("90%");
      } else if (window.innerWidth <= 1200) {
        setModalWidth("80%");
      } else if (window.innerWidth <= 1400) {
        setModalWidth("70%");
      } else {
        setModalWidth("50%");
      }
    };

    window.addEventListener("resize", handleResize);

    // –û—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, []);

  if (!isOpen || !items) return null;

  return (
    <Modal
      title={<h2 className={styles.deliveryModalTitle}>–î–æ—Å—Ç–∞–≤–∫–∞</h2>}
      open={isOpen}
      footer={null}
      onCancel={onCloseModal}
      width={modalWidth}
      wrapClassName={styles.deliveryModal}
    >
      {successfulOrder ? (
        <div className={styles.successfulOrderContainer}>
          <div>–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω üéâ</div>
          <div>–ë–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤–∞–º –ø–æ–∑–≤–æ–Ω–∏—Ç –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä</div>
        </div>
      ) : (
        <Form
          form={form}
          onFinish={handleSubmit}
          className={styles.deliveryForm}
          initialValues={{ deliveryMethod: "delivery" }}
        >
          <Form.Item
            className={styles.formInputContainer}
            name="name"
            rules={[
              { required: true, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è!" },
            ]}
          >
            <Input className={styles.formInput} placeholder="–í–∞—à–µ –∏–º—è" />
          </Form.Item>

          <Form.Item
            name="phone"
            rules={[
              { required: true, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω!" },
            ]}
          >
            <Input className={styles.formInput} placeholder="–¢–µ–ª–µ—Ñ–æ–Ω" />
          </Form.Item>

          <Form.Item name="deliveryMethod">
            <Radio.Group className={styles.radioBtn}>
              <Radio className={styles.radioBtn} value="selfPickup">
                –°–∞–º–æ–≤—ã–≤–æ–∑
              </Radio>
              <Radio className={styles.radioContainer} value="delivery">
                –î–æ—Å—Ç–∞–≤–∫–∞
              </Radio>
            </Radio.Group>
          </Form.Item>

          <Form.Item
            name="address"
            rules={[{ required: true, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å!" }]}
          >
            <Input
              className={styles.formInput}
              placeholder="–ê–¥—Ä–µ—Å (—É–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞)"
            />
          </Form.Item>
          <Form.Item name="floor">
            <Input className={styles.formInput} placeholder="–≠—Ç–∞–∂" />
          </Form.Item>
          <Form.Item name="intercom">
            <Input className={styles.formInput} placeholder="–î–æ–º–æ—Ñ–æ–Ω" />
          </Form.Item>

          <Form.Item name="comment">
            <TextArea
              rows={4}
              className={styles.formInput}
              placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É"
            />
          </Form.Item>

          <Form.Item>
            <div className={styles.titleBtnTop}>
              –î–æ—Å—Ç–∞–≤–∫–∞ –æ—Å—É—à–µ—Å—Ç–≤–ª—è–µ—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –≥–æ—Ä–æ–¥—É –ö–∞–∑–∞–Ω—å —Å 9:00 - 20:00
            </div>
            <Button type="primary" htmlType="submit" className={styles.formBtn}>
              –û—Ñ–æ—Ä–º–∏—Ç—å
            </Button>
          </Form.Item>
        </Form>
      )}
    </Modal>
  );
};

export default DeliveryModal;
