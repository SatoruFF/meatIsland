const axios = require("axios");

module.exports = {
  async afterCreate(event) {
    const { result } = event;

    const chatId = process.env.CHAT_ID;
    const token = process.env.TOKEN_TG;

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    const productIds = result.products;

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –ø–æ –µ–≥–æ ID
    const productDetails = await Promise.all(
      productIds.map(async (id) => {
        const product = await strapi.query("product").findOne({ id });
        return product ? product.name : `–¢–æ–≤–∞—Ä ID ${id}`;
      })
    );

    const message = `
   üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –Ω–∞ –ú—è—Å–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ!

   –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞: ${result.name}
   –¢–µ–ª–µ—Ñ–æ–Ω: ${result.phone}
   –ú–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏: ${result.deliveryMethod}
   –ê–¥—Ä–µ—Å: ${result.address}, —ç—Ç–∞–∂: ${result.floor}, –¥–æ–º–æ—Ñ–æ–Ω: ${result.intercom}

   üõí –ü—Ä–æ–¥—É–∫—Ç—ã:
   ${productDetails.join("\n")}
       `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    await axios.post(`https://api.telegram.org/bot${token}/sendMessage`, {
      chat_id: chatId,
      text: message,
    });
  },
};
